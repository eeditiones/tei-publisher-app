FROM mcr.microsoft.com/devcontainers/java:8-bullseye

ARG EXIST_VERSION=6.2.0
ARG TEMPLATING_VERSION=1.1.0
ARG PUBLISHER_LIB_VERSION=4.0.0
ARG ROUTER_VERSION=1.8.1
ARG EDITOR_VERSION=1.0.1

ARG HTTP_PORT=8080
ARG HTTPS_PORT=8443

ARG INSTALL_TEXLIVE="false"

# Install Ant for building TEI Publisher libraries
RUN su vscode -c "source /usr/local/sdkman/bin/sdkman-init.sh && sdk install ant"
ENV ANT_HOME=/usr/local/sdkman/candidates/ant/current
ENV PATH=${PATH}:${ANT_HOME}/bin

# Install python pip and upgrade it to latest version
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends bzip2 \
    && apt-get -y install --no-install-recommends python3-pip \
    && pip3 install --upgrade pip

# Install the TeXLive distribution for LaTeX support
RUN if [ "${INSTALL_TEXLIVE}" = "true" ]; then \
    apt-get -y install --no-install-recommends \
    texlive-xetex \
    texlive-latex-extra \
    texlive-fonts-recommended \
    texlive-lang-german \
    texlive-lang-european \
    texlive-humanities \
    texlive-plain-generic \
    fonts-junicode \
    latexmk; \
    fi

WORKDIR /workspaces

# Install tei-publisher-ner plus German and English language models
RUN git clone https://github.com/eeditiones/tei-publisher-ner.git \
    && cd tei-publisher-ner \
    && pip3 install --no-cache-dir --upgrade -r requirements.txt \
    && pip3 install --no-cache-dir gunicorn \
    && python3 -m spacy download de_core_news_sm \
    && python3 -m spacy download en_core_web_sm

# Download and install eXist-db
RUN curl -L -o exist-distribution-${EXIST_VERSION}-unix.tar.bz2 https://github.com/eXist-db/exist/releases/download/eXist-${EXIST_VERSION}/exist-distribution-${EXIST_VERSION}-unix.tar.bz2 \
    && tar xfj exist-distribution-${EXIST_VERSION}-unix.tar.bz2 -C /usr/local \
    && rm exist-distribution-${EXIST_VERSION}-unix.tar.bz2 \
    && mv /usr/local/exist-distribution-${EXIST_VERSION} /usr/local/exist

# If tei-publisher-lib version is "master", build it. Otherwise download the specified version.
RUN if [ "${PUBLISHER_LIB_VERSION}" = "master" ]; then \
        git clone https://github.com/eeditiones/tei-publisher-lib.git \
        && cd tei-publisher-lib \
        && ant \
        && cp build/*.xar /usr/local/exist/autodeploy; \
    else \
        curl -L -o /usr/local/exist/autodeploy/tei-publisher-lib-${PUBLISHER_LIB_VERSION}.xar https://exist-db.org/exist/apps/public-repo/public/tei-publisher-lib-${PUBLISHER_LIB_VERSION}.xar; \
    fi

RUN curl -L -o /usr/local/exist/autodeploy/roaster-${ROUTER_VERSION}.xar https://exist-db.org/exist/apps/public-repo/public/roaster-${ROUTER_VERSION}.xar
RUN curl -L -o /usr/local/exist/autodeploy/templating-${TEMPLATING_VERSION}.xar https://exist-db.org/exist/apps/public-repo/public/templating-${TEMPLATING_VERSION}.xar
RUN curl -L -o /usr/local/exist/autodeploy/atom-editor-${EDITOR_VERSION}.xar https://github.com/wolfgangmm/existdb-langserver/raw/master/resources/atom-editor-${EDITOR_VERSION}.xar

WORKDIR /usr/local/exist

ENV EXIST_HOME=/usr/local/exist
ENV JAVA_HOME=/usr/local/sdkman/candidates/java/current

RUN bin/client.sh -l --no-gui --xpath "system:get-version()"

EXPOSE ${HTTP_PORT} ${HTTPS_PORT} 8001

ENV JAVA_OPTS \
    -Djetty.port=${HTTP_PORT} \
    -Djetty.ssl.port=${HTTPS_PORT} \
    -Dfile.encoding=UTF8 \
    -Dsun.jnu.encoding=UTF-8 \
    -XX:+UseG1GC \
    -XX:+UseStringDeduplication \
    -XX:+UseContainerSupport \
    -XX:MaxRAMPercentage=${JVM_MAX_RAM_PERCENTAGE:-75.0} \ 
    -XX:+ExitOnOutOfMemoryError

ENTRYPOINT [ "/usr/local/exist/bin/startup.sh" ]