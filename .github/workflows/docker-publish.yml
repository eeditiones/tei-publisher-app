name: TEI Publisher CI and Docker Snapshots

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - 'release/*'

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  
  pull_request:
    branches: [ master ]

  workflow_dispatch:

env:
  IMAGE_NAME: teipublisher
  TEST_TAG: exist-db
  EXIST_TAG: 6.4.0

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        EXIST_BASE: [6.2.0, release]
        experimental: [false]
        include:
            - EXIST_BASE: latest
              experimental: true

    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Build default images for testing on CI
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            EXIST_VERSION=${{ matrix.EXIST_BASE }}
          load: true
          tags: ${{ env.TEST_TAG }}
          # cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
      - name: Start docker image
        run: docker run --publish 8080:8080 --name db --detach ${{ env.TEST_TAG }}
      - name: Run npm install
        run: npm install
      - name: Run tests
        if: matrix.experimental != true
        run: npm test
      - name: Run tests [expect failures]
        if: matrix.experimental == true
        continue-on-error: true
        run: npm test
      - name: Retrieve eXist log
        if: failure()
        run: docker cp db:/exist/logs/exist.log .
      - name: Publish log as artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: exist-${{matrix.EXIST_BASE}}-tp.log
          path: ./exist.log
      - name: Stop docker
        run: docker stop db

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64 

      - name: Make buildkit default
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          install: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/eeditiones/${{ env.IMAGE_NAME }}
          # TODO(DP): This could be extended further
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern=v{{major}}
            type=raw,value=latest,enable={{is_default_branch}}    


      # was ${{ github.actor }}
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # TODO(DP): This should be based on release
      - name: Push prod image
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: |
            BUILD=prod
            USR=nonroot:nonroot
            EXIST_VERSION=${{ env.EXIST_TAG }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          sbom: true
          tags: |
            ${{ steps.meta.outputs.tags }}-prod
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Push dev image
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: |
            BUILD=local
            USR=root:root
            EXIST_VERSION=${{ env.EXIST_TAG }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          sbom: true
          tags: |
            ${{ steps.meta.outputs.tags }}-dev
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}  
