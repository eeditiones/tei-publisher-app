<?xml-model href="teipublisher_odds.xsd"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>TEI Publisher ODD
                    ,
                </title>
                <title type="short">TEI Publisher Base</title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Default customization generated by <ref target="http://tei-publisher.com">TEI
                        Publisher</ref>, extending tei_simplePrint.odd.</p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl/>
        </encodingDesc>
        <revisionDesc>
            <change when="2017-09-08">adjust metadata in teiHeader</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="teipublisher" source="tei_simplePrint.odd">
                <elementSpec ident="text" mode="change">
                    <model behaviour="body"/>
                </elementSpec>
                <elementSpec ident="figure" mode="change">
                    <model predicate="head or @rendition='simple:display'" behaviour="block"/>
                    <model behaviour="inline"/>
                </elementSpec>
                <elementSpec ident="head" mode="change">
                    <model predicate="$parameters?header='short'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)]), '^(.*?)[^\w]*$', '$1')"/>
        </model>
                    <model predicate="parent::figure" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                    <model predicate="parent::table" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                    <model predicate="parent::lg" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                    <model predicate="parent::list" behaviour="listItem">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model>
                    <model predicate="parent::div" behaviour="heading">
            <param name="level" value="count(ancestor::div)"/>
        </model>
                    <model behaviour="block"/>
                </elementSpec>
                <elementSpec ident="teiHeader" mode="change">
                    <model output="latex" behaviour="metadata"/>
                    <model output="fo" behaviour="omit"/>
                    <model output="web" predicate="$parameters?header='short'" behaviour="block"/>
                    <model output="web" behaviour="metadata"/>
                </elementSpec>
                <elementSpec ident="fileDesc" mode="change">
                    <modelSequence predicate="$parameters?header='short'">
            <model behaviour="block" cssClass="header-short">
                <param name="content" value="titleStmt"/>
            </model>
            <model behaviour="block" cssClass="header-short">
                <param name="content" value="editionStmt"/>
            </model>
            <model behaviour="block" cssClass="header-short">
                <param name="content" value="publicationStmt"/>
            </model>
        </modelSequence>
                    <model behaviour="title">
            <param name="content" value="titleStmt"/>
        </model>
                </elementSpec>
                <elementSpec ident="titleStmt" mode="add">
                    <model output="latex" behaviour="meta">
            <param name="content" value="."/>
        </model>
                    <model output="fo" behaviour="heading"/>
                    <model predicate="$parameters?mode='title'" behaviour="heading">
            <param name="content" value="title[not(@type)]"/>
            <param name="level" value="5"/>
        </model>
                    <modelSequence output="web" predicate="$parameters?header='short'">
            <model behaviour="link">
                <param name="content" value="title[1]"/>
                <param name="uri" value="$parameters?doc"/>
            </model>
            <model behaviour="block">
                <param name="content" value="subsequence(title, 2)"/>
            </model>
            <model behaviour="block">
                <param name="content" value="author"/>
            </model>
        </modelSequence>
                    <model output="web" behaviour="block"/>
                </elementSpec>
                <elementSpec ident="publicationStmt" mode="add">
                    <model output="web" behaviour="block">
            <param name="content" value="availability/licence"/>
        </model>
                    <model behaviour="omit"/>
                </elementSpec>
                <elementSpec ident="licence" mode="add">
                    <model output="web" predicate="@target" behaviour="link" cssClass="licence">
            <param name="content" value="'Licence'"/>
            <param name="uri" value="@target"/>
        </model>
                    <model behaviour="omit"/>
                </elementSpec>
                <elementSpec ident="title" mode="change">
                    <model predicate="$parameters?header='short'" behaviour="heading">
            <param name="level" value="5"/>
        </model>
                    <modelSequence predicate="parent::titleStmt/parent::fileDesc">
            <model predicate="preceding-sibling::title" behaviour="text">
                <param name="content" value="' â€” '"/>
            </model>
            <model behaviour="inline"/>
        </modelSequence>
                    <model predicate="not(@level) and parent::bibl" behaviour="inline"/>
                    <modelSequence predicate="@level='m' or not(@level)">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="ancestor::biblFull" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence>
                    <modelSequence predicate="@level='s' or @level='j'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (  ancestor::biblFull)" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence>
                    <modelSequence predicate="@level='u' or @level='a'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (    ancestor::biblFull)" behaviour="text">
                <param name="content" value="'. '"/>
            </model>
        </modelSequence>
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="author" mode="change">
                    <model predicate="ancestor::teiHeader" behaviour="block">
            <outputRendition xml:space="preserve" scope="before">
            content: 'By ';
            </outputRendition>
        </model>
                    <model behaviour="inline"/>
                </elementSpec>
                <elementSpec ident="edition" mode="change">
                    <model predicate="ancestor::teiHeader" behaviour="block">
            <outputRendition xml:space="preserve" scope="before">
            content: 'Edition: ';
            </outputRendition>
        </model>
                </elementSpec>
            <elementSpec ident="ref" mode="change">
                    <model predicate="not(@target)" behaviour="inline"/>
                    <model predicate="not(node())" behaviour="link">
            <param name="content" value="@target"/>
            <param name="uri" value="@target"/>
        </model>
                    <model behaviour="link">
            <param name="uri" value="@target"/>
        </model>
                </elementSpec>
            <elementSpec ident="note" mode="change">
                    <model behaviour="note">
            <param name="place" value="@place"/>
            <param name="label" value="@n"/>
        </model>
                </elementSpec>
            <elementSpec ident="notatedMusic" mode="add">
                    <model behaviour="figure">
            <param name="title" value="label"/>
            <param name="content" value="ptr"/>
        </model>
                </elementSpec>
                <elementSpec ident="ptr" mode="add">
                    <model predicate="parent::notatedMusic" behaviour="pass-through">
            <param name="url" value="@target"/>
            <pb:template xmlns="" xml:space="preserve"><pb-mei url="[[url]]" player="player">
  <pb-option name="appXPath" on="./rdg[contains(@label, 'original')]" off="">Original Clefs</pb-option>
</pb-mei></pb:template>
        </model>
                </elementSpec>
            <elementSpec ident="formula" mode="change">
                    <model predicate="@rendition='simple:display'" behaviour="block"/>
                    <model output="latex" predicate="@rend=&#34;display&#34;" behaviour="inline">
            <param name="content" value="string()"/>
            <pb:template xmlns="" xml:space="preserve">\begin{equation}[[content]]\end{equation}</pb:template>
        </model>
                    <model output="latex" behaviour="inline">
            <param name="content" value="string()"/>
            <pb:template xmlns="" xml:space="preserve">\begin{math}[[content]]\end{math}</pb:template>
        </model>
                    <model predicate="@rend='display'" behaviour="webcomponent">
            <param name="name" value="'pb-formula'"/>
            <param name="display" value="true()"/>
        </model>
                    <model behaviour="webcomponent">
            <param name="name" value="'pb-formula'"/>
        </model>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>