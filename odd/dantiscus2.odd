<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="teipublisher_odds.xsd"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Dantiscus' Letters Demo                                                     
                 <desc>16th c. correspondence with facsimile and encoding of transcriptional features and prosopographical information</desc>
                </title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl>
                <rendition selector=".choice">
                    color: #888888;
                </rendition>

            </tagsDecl>
        </encodingDesc>
        <revisionDesc>
            <change when="2018-09-12+02:00">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="dantiscus" source="teipublisher.odd">
                <elementSpec ident="pb" mode="change">
                    <model predicate="@facs" behaviour="webcomponent" cssClass="facs">
            <param name="name" value="'pb-facs-link'"/>
            <param name="content" value="@n"/>
            <param name="emit" value="'transcription'"/>            
            <param name="facs" value="replace(@facs, '^img:(.*)$', '$1')"/>
            <outputRendition xml:space="preserve">
            
            
            font-size: 16px;
                            color: #888888;
                            cursor: pointer;
                            display: inline;
                            display: block;
                            margin-right: 5px;
                            float: right;
            
            
            </outputRendition>
        </model>
                    <model behaviour="omit">
            <param name="type" value="'page'"/>
            <param name="label" value="(concat(if(@n) then concat(@n,' ') else '',if(@facs) then                   concat('@',@facs) else ''))"/>
            <outputRendition xml:space="preserve">
            display: block; margin-left: 4pt; color: grey; float: right;
            </outputRendition>
            <outputRendition xml:space="preserve">
            content: '[Page ';
            </outputRendition>
            <outputRendition xml:space="preserve">
            content: ']';
            </outputRendition>
        </model>
                </elementSpec>



                <elementSpec ident="choice" mode="change">
                    <model output="plain" predicate="sic and corr" behaviour="inline">
            <param name="content" value="corr[1]"/>
        </model>
                    <model output="plain" predicate="abbr and expan" behaviour="inline">
            <param name="content" value="expan[1]"/>
        </model>
                    <model output="plain" predicate="orig and reg" behaviour="inline">
            <param name="content" value="reg[1]"/>
        </model>
                    <model predicate="sic and corr" behaviour="alternate" cssClass="choice">
            <param name="default" value="corr[1]"/>
            <param name="alternate" value="sic[1]"/>
        </model>
                    <model predicate="$parameters?mode='norm' and abbr and expan" behaviour="alternate" cssClass="choice">
            <param name="default" value="expan[1]"/>
            <param name="alternate" value="abbr[1]"/>
        </model>
                    <model predicate="abbr and expan" behaviour="alternate" cssClass="choice">
            <param name="default" value="abbr[1]"/>
            <param name="alternate" value="expan[1]"/>
        </model>
                    <model predicate="orig and reg" behaviour="alternate" cssClass="choice">
            <param name="default" value="reg[1]"/>
            <param name="alternate" value="orig[1]"/>
        </model>
                </elementSpec>
                <elementSpec ident="name" mode="change">
                    <model behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="id(substring-after(@ref, '#'), root($parameters?root))/node()"/>
            <outputRendition xml:space="preserve">
            color: green;
            </outputRendition>
        </model>
                </elementSpec>
                
                <elementSpec ident="persName" mode="add">
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="note" mode="change">
                    <model predicate="parent::person or parent::place" behaviour="inline">
            <outputRendition xml:space="preserve">
            text-variant: italic;
            </outputRendition>
        </model>
                    <model predicate="@place" behaviour="note">
            <param name="place" value="@place"/>
            <param name="label" value="@n"/>
        </model>
                    <model predicate="parent::div and not(@place)" behaviour="block">
            <outputRendition xml:space="preserve">
            
            
            
            
            
            margin-left: 10px;margin-right: 10px;
                  font-size:smaller;
            
            
            
            
            
            </outputRendition>
        </model>
                    <model predicate="not(@place)" behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content:" [";
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content:"] ";
            </outputRendition>
            <outputRendition xml:space="preserve">
            font-size:small;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="rs" mode="change">
                    <model behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="id(substring-after(@ref, '#'), root($parameters?root))/node()"/>
            <outputRendition xml:space="preserve">
            color: green;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="seg" mode="change">
                    <model output="web" behaviour="webcomponent">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="replace(@xml:id, '^s\.(.*)$', 't.$1')"/>
            <param name="highlight-self" value="'highlight-self'"/>
        </model>
                    <model behaviour="inline" useSourceRendition="true"/>
                </elementSpec>
                <elementSpec ident="titleStmt" mode="change">
                    <model predicate="$parameters?mode='commentary'" behaviour="block" cssClass="editors">
            <desc>render editors list</desc>
            <param name="editors" value="editor"/>
            <pb:template xmlns="" xml:space="preserve"><div><h3>Editors</h3><ul>[[editors]]</ul></div></pb:template>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model>
                    <model output="latex" behaviour="meta">
            <param name="content" value="."/>
        </model>
                    <model output="fo" behaviour="heading"/>
                    <modelSequence output="web" predicate="$parameters?header='short'">
            <model behaviour="link">
                <param name="content" value="title[1]"/>
                <param name="uri" value="$parameters?doc"/>
            </model>
            <model behaviour="block">
                <param name="content" value="subsequence(title, 2)"/>
            </model>
            <model behaviour="block">
                <param name="content" value="editor"/>
            </model>
            <model behaviour="block" cssClass="incipit">
                <desc>incipit</desc>
                <param name="content" value="root(.)//seg[@type='incipit']"/>
            </model>
        </modelSequence>
                    <model output="web" behaviour="heading">
            <param name="level" value="4"/>
        </model>
                </elementSpec>
                <elementSpec ident="teiHeader" mode="change">
                    <model output="latex" behaviour="block">
            <param name="content" value="(fileDesc/titleStmt/title[not(@type)], profileDesc/correspDesc)"/>
            <pb:template xmlns="" xml:space="preserve">\def\volume{[[content]]}</pb:template>
        </model>
                    <model output="fo" behaviour="omit"/>
                    <model output="web" predicate="$parameters?header='short'" behaviour="block"/>
                    <model predicate="$parameters?mode='commentary'" behaviour="inline"/>
                    <model output="web" predicate="$parameters?mode='title'" behaviour="inline">
            <param name="content" value="(fileDesc/titleStmt/title)"/>
        </model>
                    <model output="web" behaviour="metadata"/>
                </elementSpec>
            <elementSpec ident="lb" mode="change">
                    <model predicate="$parameters?mode='norm'" behaviour="omit"/>
                    <model behaviour="break" useSourceRendition="true">
            <param name="type" value="'line'"/>
            <param name="label" value="@n"/>
        </model>
                </elementSpec>
    <elementSpec ident="app" mode="change">
                    <model behaviour="inline">
            <param name="content" value="lem"/>
            <param name="alternate" value="rdg"/>
            <param name="persistent" value="true()"/>
            <param name="name" value="'pb-popover'"/>
            <pb:template xmlns="" xml:space="preserve">
                <pb-popover persistent="[[persistent]]">[[content]]<span slot="alternate">[[alternate]]</span></pb-popover>
            </pb:template>
        </model>
                </elementSpec>
            <elementSpec ident="ref" mode="change">
                    <model predicate="@ana" behaviour="inline" cssClass="itinerary">
            <desc>Kasia's itinerary references</desc>
        </model>
                    <model predicate="not(@target)" behaviour="inline"/>
                    <model predicate="not(node())" behaviour="link">
            <param name="content" value="@target"/>
            <param name="uri" value="@target"/>
        </model>
                    <model behaviour="link">
            <param name="uri" value="@target"/>
        </model>
                </elementSpec>
                <elementSpec ident="fileDesc" mode="change">
                    <model predicate="$parameters?mode='commentary'" behaviour="block"/>
                    <modelSequence predicate="$parameters?header='short'">
            <model behaviour="block" cssClass="header-short">
                <param name="content" value="titleStmt"/>
            </model>
            <model behaviour="block" cssClass="header-short">
                <param name="content" value="editionStmt"/>
            </model>
            <model behaviour="block" cssClass="header-short">
                <param name="content" value="publicationStmt"/>
            </model>
            <model behaviour="block" cssClass="sample-description">
                <desc>Output abstract containing demo description</desc>
                <param name="content" value="../profileDesc/abstract"/>
            </model>
        </modelSequence>
                    <model behaviour="title">
            <param name="content" value="titleStmt"/>
        </model>
                </elementSpec>
                <elementSpec ident="editor" mode="change">
                    <model predicate="$parameters?mode='commentary'" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
        </model>
                    <modelSequence predicate="preceding-sibling::editor">
            <model behaviour="inline">
                <param name="content" value="', '"/>
            </model>
            <model behaviour="inline"/>
        </modelSequence>
                    <model behaviour="inline"/>
                </elementSpec>
                <elementSpec ident="title" mode="change">
                    <model predicate="$parameters?header='short'" behaviour="heading">
            <param name="level" value="5"/>
        </model>
                    <modelSequence predicate="parent::titleStmt/parent::fileDesc">
            <model predicate="preceding-sibling::title" behaviour="text">
                <param name="content" value="' — '"/>
            </model>
            <model behaviour="inline"/>
        </modelSequence>
                    <model predicate="not(@level) and parent::bibl" behaviour="inline"/>
                    <modelSequence predicate="@level='m' or not(@level)">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="ancestor::biblFull" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence>
                    <modelSequence predicate="@level='s' or @level='j'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (  ancestor::biblFull)" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence>
                    <modelSequence predicate="@level='u' or @level='a'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (    ancestor::biblFull)" behaviour="text">
                <param name="content" value="'. '"/>
            </model>
        </modelSequence>
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="sourceDesc" mode="add">
                    <model behaviour="block">
            <pb:template xmlns="" xml:space="preserve"><div><h3>Sources</h3><ol>[[content]]</ol></div></pb:template>
        </model>
                </elementSpec>
                <elementSpec ident="msDesc" mode="add">
                    <model behaviour="block">
            <param name="repository" value="msIdentifier/institution"/>
            <param name="msid" value="msIdentifier/idno"/>
            <param name="desc" value="physDesc/p"/>
            <pb:template xmlns="" xml:space="preserve"><li>
  <b>[[repository]]</b> 
  [[msid]] ([[desc]])
</li></pb:template>
        </model>
                </elementSpec>
                
                <elementSpec ident="person" mode="add">
                    <model predicate="$parameters?mode='commentary'" behaviour="inline" cssClass="person-entry">
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
        </model>
                    <model behaviour="inline"/>
                </elementSpec>
                <elementSpec ident="p" mode="change">
                    <model predicate="parent::physDesc" behaviour="inline"/>
                    <model behaviour="paragraph" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            text-align: justify;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="profileDesc" mode="change">
                    <model predicate="$parameters?mode='commentary'" behaviour="block">
            <param name="correspDesc" value="correspDesc"/>
            <param name="places" value="settingDesc/listPlace/place"/>
            <param name="persons" value="particDesc/listPerson/person"/>
            <pb:template xmlns="" xml:space="preserve"><div>
  <div><h3>Correspondence</h3>[[correspDesc]]</div>
  <div><h3>Places</h3><ol>[[places]]</ol></div>
  <div><h3>Persons</h3><ol>[[persons]]</ol></div>
</div></pb:template>
        </model>
                    <model behaviour="omit"/>
                </elementSpec>
                <elementSpec ident="place" mode="add">
                    <model predicate="$parameters?mode='commentary'" behaviour="block">
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
        </model>
                    <model behaviour="inline"/>
                </elementSpec>
            <elementSpec ident="bibl" mode="change">
                    <model predicate="$parameters?mode='commentary'" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve"><li>[[content]]</li></pb:template>
        </model>
                    <model predicate="parent::listBibl" behaviour="listItem"/>
                    <model behaviour="inline"/>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>